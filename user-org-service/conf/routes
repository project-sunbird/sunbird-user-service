# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# User management APIs
POST	/v1.3/user/create				            @controllers.usermanagement.UserController.createUser()
POST	/v2.3/user/create				            @controllers.usermanagement.UserController.createUserV2()
GET  	/v1.3/user/read/:uid				        @controllers.usermanagement.UserProfileReadController.getUserById(uid:String)
GET  	/v2.3/user/read/:uid				        @controllers.usermanagement.UserProfileReadController.getUserByIdV2(uid:String)
POST  /v1.3/user/getuser                  @controllers.usermanagement.UserProfileReadController.getUserByLoginId()
GET   /v1.3/user/get/:idType/:id          @controllers.usermanagement.UserProfileReadController.getUserByKey(idType:String,id:String)
POST  /v1.3/user/search					 @controllers.usermanagement.UserProfileReadController.searchUser()
POST  /private/user/v1.3/search            @controllers.usermanagement.UserProfileReadController.searchUser()
GET   /v1.3/user/mediatype/list     @controllers.usermanagement.UserProfileReadController.getProfileSupportedSocialMediaTypes()
POST  /v1.3/user/profile/visibility @controllers.usermanagement.UserProfileReadController.setProfileVisibility()
GET   /v1.3/user/type/list		  @controllers.usermanagement.UserProfileReadController.getUserTypes()

POST  /v1.3/user/block			        @controllers.usermanagement.UserStatusController.blockUser()
POST  /v1.3/user/unblock			      @controllers.usermanagement.UserStatusController.unblockUser()

GET   /v1.3/role/read						    @controllers.usermanagement.RolesController.getRoles()
POST  /v1.3/user/assign/role			  @controllers.usermanagement.UserProfileUpdateController.assignRoles()
POST  /private/user/v1.3/assign/role	  @controllers.usermanagement.UserProfileUpdateController.assignRoles()
PATCH	/v1.3/user/update					          @controllers.usermanagement.UserProfileUpdateController.updateUser()
PATCH	/private/user/v1.3/update					          @controllers.usermanagement.UserProfileUpdateController.updateUser()

PATCH /v1.3/user/update/logintime	  @controllers.usermanagement.UserProfileUpdateController.updateLoginTime()

POST  /v1.3/user/tnc/accept           @controllers.tac.UserTncController.acceptTnc()
POST  /v1.3/user/data/encrypt              @controllers.usermanagement.UserDataEncryptionController.encrypt()
POST  /v1.3/user/data/decrypt              @controllers.usermanagement.UserDataEncryptionController.decrypt()

#Health check
GET  /health                                  @controllers.healthmanager.HealthController.getHealth()
GET  /:service/health                      @controllers.healthmanager.HealthController.getUserOrgServiceHealth(service:String)


# Organisation Management APIs

POST    /v1.3/org/create          @controllers.orgmanagement.OrgController.createOrg()
PATCH   /v1.3/org/update          @controllers.orgmanagement.OrgController.updateOrg()
PATCH   /v1.3/org/status/update   @controllers.orgmanagement.OrgController.updateOrgStatus()
POST    /v1.3/org/read            @controllers.orgmanagement.OrgController.getOrgDetails()
POST    /v1.3/org/search          @controllers.orgmanagement.OrgController.search()

POST    /v1.3/org/member/add      @controllers.orgmanagement.OrgMemberController.addMemberToOrganisation()
POST    /v1.3/org/member/remove   @controllers.orgmanagement.OrgMemberController.removeMemberFromOrganisation()

POST    /v1.3/org/type/create     @controllers.orgmanagement.OrgTypeController.createOrgType()
PATCH   /v1.3/org/type/update     @controllers.orgmanagement.OrgTypeController.updateOrgType()
GET     /v1.3/org/type/list       @controllers.orgmanagement.OrgTypeController.listOrgType()

# Logs Management APIs

POST    /v1.3/system/log/update           @controllers.logsmanager.LogController.setLogLevel()
