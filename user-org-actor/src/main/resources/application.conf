userOrgActorSystem {
  default-dispatcher {
    type = "Dispatcher"
    executor = "fork-join-executor"
    fork-join-executor {
      parallelism-min = 8
      parallelism-factor = 32.0
      parallelism-max = 64
    }
    # Throughput for default Dispatcher, set to 1 for as fair as possible
    throughput = 1
  }
  router-dispatcher {
    type = "Dispatcher"
    executor = "fork-join-executor"
    fork-join-executor {
      parallelism-min = 8
      parallelism-factor = 32.0
      parallelism-max = 64
    }
    # Throughput for default Dispatcher, set to 1 for as fair as possible
    throughput = 1
  }
  supervisor-dispatcher {
    type = "Dispatcher"
    executor = "fork-join-executor"
    fork-join-executor {
      parallelism-min = 8
      parallelism-factor = 32.0
      parallelism-max = 64
    }
    # Throughput for default Dispatcher, set to 1 for as fair as possible
    throughput = 1
  }
  user-dispatcher {
    type = "Dispatcher"
    executor = "fork-join-executor"
    fork-join-executor {
      parallelism-min = 8
      parallelism-factor = 32.0
      parallelism-max = 64
    }
    # Throughput for default Dispatcher, set to 1 for as fair as possible
    throughput = 1
  }
  search-read-dispatcher {
    type = "Dispatcher"
    executor = "fork-join-executor"
    fork-join-executor {
      parallelism-min = 12
      parallelism-factor = 32.0
      parallelism-max = 64
    }
    # Throughput for default Dispatcher, set to 1 for as fair as possible
    throughput = 1
  }
  org-dispatcher {
    type = "Dispatcher"
    executor = "fork-join-executor"
    fork-join-executor {
      parallelism-min = 8
      parallelism-factor = 32.0
      parallelism-max = 64
    }
    # Throughput for default Dispatcher, set to 1 for as fair as possible
    throughput = 1
  }

  akka {

    loglevel = "DEBUG"
    log-config-on-start = on

    actor {
      akka.actor.allow-java-serialization = off
      debug {
        # enable DEBUG logging of all AutoReceiveMessages (Kill, PoisonPill etc.)
        autoreceive = on
        # enable DEBUG logging of actor lifecycle changes
        lifecycle = on
        # enable DEBUG logging of unhandled messages
        unhandled = on
        # enable DEBUG logging of all LoggingFSMs for events, transitions and timers
        fsm = on
        # enable DEBUG logging of subscription changes on the eventStream
        event-stream = on
      }

      default-dispatcher {
        type = "Dispatcher"
        executor = "fork-join-executor"
        fork-join-executor {
          parallelism-min = 8
          parallelism-factor = 32.0
          parallelism-max = 64
        }
        # Throughput for default Dispatcher, set to 1 for as fair as possible
        throughput = 1
      }
      deployment {
        /UserCreateActor
          {
            router = smallest-mailbox-pool
            nr-of-instances = 5
            dispatcher = user-dispatcher
          }
        /UserSearchActor
          {
            router = smallest-mailbox-pool
            nr-of-instances = 5
            dispatcher = search-read-dispatcher
          }
        /UserReadActor
          {
            router = smallest-mailbox-pool
            nr-of-instances = 5
            dispatcher = search-read-dispatcher
          }
        /OrgCreateActor
          {
            router = smallest-mailbox-pool
            nr-of-instances = 6
            dispatcher = user-dispatcher
          }
        /UserAttributeProcessorActor
          {
            router = smallest-mailbox-pool
            nr-of-instances = 5
            dispatcher = user-dispatcher
          }
        /UserAddressManagementActor
          {
            router = smallest-mailbox-pool
            nr-of-instances = 5
            dispatcher = user-dispatcher
          }
        /UserEducationManagementActor
          {
            router = smallest-mailbox-pool
            nr-of-instances = 5
            dispatcher = user-dispatcher
          }
        /UserJobProfileManagementActor
          {
            router = smallest-mailbox-pool
            nr-of-instances = 5
            dispatcher = user-dispatcher
          }
        /UserExternalIdsManagementActor
          {
            router = smallest-mailbox-pool
            nr-of-instances = 5
            dispatcher = user-dispatcher
          }
        /UserOrgManagementActor
          {
            router = smallest-mailbox-pool
            nr-of-instances = 5
            dispatcher = user-dispatcher
          }
        /ESServiceActor
          {
            router = smallest-mailbox-pool
            nr-of-instances = 5
            dispatcher = user-dispatcher
          }
        /UserESCreateActor
          {
            router = smallest-mailbox-pool
            nr-of-instances = 5
            dispatcher = user-dispatcher
          }
      }
    }
    remote {
      maximum-payload-bytes = 30000000 bytes
      netty.tcp {
        port = 8088
        message-frame-size =  30000000b
        send-buffer-size =  30000000b
        receive-buffer-size =  30000000b
        maximum-frame-size = 30000000b
      }
    }
  }
}
